apiVersion: apps/v1
kind: Deployment
metadata:
  name: craned
  namespace: crane-system
  resourceVersion: "7054"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: craned
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: craned
    spec:
      containers:
      - args:
        - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
        - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
        - --prometheus-address=http://prometheus-server.crane-system.svc.cluster.local:8080
        - --v=2
        command:
        - /craned
        - --prometheus-address=PROMETHEUS_ADDRESS
        - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
        - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
        - -v=4
        image: docker.io/gocrane/craned:v0.2.0
        imagePullPolicy: IfNotPresent
        name: craned
        ports:
        - containerPort: 9443
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/healthz
            port: 8082
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tmp/recommendation-config
          name: config
      - image: docker.io/gocrane/dashboard:v0.3.0
        imagePullPolicy: IfNotPresent
        name: dashboard
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/
          name: nginx-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: craned
      serviceAccountName: craned
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-tls
      - configMap:
          defaultMode: 420
          name: recommendation-config
        name: config
      - configMap:
          defaultMode: 420
          name: nginx-conf
        name: nginx-conf
