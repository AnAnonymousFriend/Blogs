# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"craned"},"name":"craned","namespace":"crane-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"craned"}},"template":{"metadata":{"labels":{"app":"craned"}},"spec":{"containers":[{"command":["/craned","--prometheus-address=PROMETHEUS_ADDRESS","--feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true","--recommendation-config-file=/tmp/recommendation-config/config_set.yaml","-v=4"],"image":"docker.io/gocrane/craned:v0.2.0","imagePullPolicy":"IfNotPresent","name":"craned","volumeMounts":[{"mountPath":"/tmp/k8s-webhook-server/serving-certs","name":"cert","readOnly":true},{"mountPath":"/tmp/recommendation-config","name":"config"}]}],"serviceAccountName":"craned","tolerations":[{"key":"node-role.kubernetes.io/master","operator":"Exists"}],"volumes":[{"name":"cert","secret":{"defaultMode":420,"secretName":"webhook-server-tls"}},{"configMap":{"name":"recommendation-config"},"name":"config"}]}}}}
    meta.helm.sh/release-name: crane
    meta.helm.sh/release-namespace: crane-system
  creationTimestamp: "2022-04-07T03:25:20Z"
  generation: 2
  labels:
    app: craned
    app.kubernetes.io/instance: crane
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: crane
    app.kubernetes.io/version: v0.3.0
    helm.sh/chart: crane-0.3.0
  name: craned
  namespace: crane-system
  resourceVersion: "7054"
  uid: 0ce041ea-e39a-48d4-8cd4-28a6bccbcdc2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: craned
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: craned
    spec:
      containers:
      - args:
        - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
        - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
        - --prometheus-address=http://prometheus-server.crane-system.svc.cluster.local:8080
        - --v=2
        command:
        - /craned
        - --prometheus-address=PROMETHEUS_ADDRESS
        - --feature-gates=Analysis=true,TimeSeriesPrediction=true,Autoscaling=true
        - --recommendation-config-file=/tmp/recommendation-config/config_set.yaml
        - -v=4
        image: docker.io/gocrane/craned:v0.2.0
        imagePullPolicy: IfNotPresent
        name: craned
        ports:
        - containerPort: 9443
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/healthz
            port: 8082
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tmp/recommendation-config
          name: config
      - image: docker.io/gocrane/dashboard:v0.3.0
        imagePullPolicy: IfNotPresent
        name: dashboard
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/
          name: nginx-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: craned
      serviceAccountName: craned
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-tls
      - configMap:
          defaultMode: 420
          name: recommendation-config
        name: config
      - configMap:
          defaultMode: 420
          name: nginx-conf
        name: nginx-conf
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-04-07T03:25:30Z"
    lastUpdateTime: "2022-04-07T03:25:30Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-04-07T03:36:04Z"
    lastUpdateTime: "2022-04-07T03:36:04Z"
    message: ReplicaSet "craned-6c76c4d664" has timed out progressing.
    reason: ProgressDeadlineExceeded
    status: "False"
    type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 2
  unavailableReplicas: 1
  updatedReplicas: 1
